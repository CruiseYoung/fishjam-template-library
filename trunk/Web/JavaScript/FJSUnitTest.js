
//常见的JavaScript单元测试工具
//注意：测试用例的代码需要包含在“自执行函数”中 -- (function funName(){ xxxxx; })(); 或全局范围的代码 ?

/**********************************************************************************************************************
* QUnit(http://qunitjs.com/) -- 类似于JUnit（Java编程）的单元测试框架，其被JQuery团队用来测试jQuery库。
*   使用 qunit.js + qunit.css + HTML 页面的方式
*   语法：
*     module( "模块名" , {
*         setup : function() { xxxx; },       //每个用例前执行
*         teardown: function() { xxxxx; }     //每个用例后执行
*     });
*     test( "测试用例名", function() { 包含断言的测试代码 } )
*     asyncTest() -- 提供异步测试支持，可以用于测试 Asynchronous JavaScript and XML（Ajax） 的事务处理
*     判断断言
*       equal( 实际值, 期待值, "提示信息" ); <== 验证相等，使用"=="运算符; 如 3 == "3" 返回 true;
*       expect -- 可以让你轻松地验证运行在一个测试中的多个断言
*       ok( bool返回值, "提示信息" );
*       strictEqual(实际值, 期待值, "提示信息") -- 验证严格相等，使用"==="运算符; 如 3 === "3" 返回false;
**********************************************************************************************************************/

/**********************************************************************************************************************
* 
* YUI Test -- YUI库（Yahoo!）内部的一个组件,是一个详尽完整的单元测试框架。
*   
**********************************************************************************************************************/

/**********************************************************************************************************************
* JSTestDriver(http://code.google.com/p/js-test-driver/)
* 可以通过命令行来在多种浏览器中运行JavaScript，不需要编写 HTML 运行器，但需要配置 jsTestDriver.conf。
* 安装配置：
*   1.安装 JavaSDK
*   2.安装 WebStorm(WebServer?);
*   3.下载并启动 JsTestDriver，监听指定端口: java -jar JsTestDriver-xxxx.jar --port 9876
*     开启成功后会有 "setting runnermode QUIET" 提示(9876是webstorm 调试的默认端口)
* 内容示例如下：
*   server: http://localhost:4224  
*   load:  
*   - js/src/*.js  
*   test:  
*   - js/test/*.js 
**********************************************************************************************************************/

