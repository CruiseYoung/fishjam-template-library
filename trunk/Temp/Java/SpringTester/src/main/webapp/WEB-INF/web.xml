<?xml version="1.0" encoding="UTF-8"?>
<!--
    注意：★ Eclipse中的插件支持可视化编辑 (Outline 中右键) ★
    
    web.xml : Web配置描述符文件, Servlet2.5以前，每个应用必须包含这个文件，且放在 WEB-INF 路径下。 
	Servlet3.0 以后，可通过 Annotation 来配置管理Web组件 <web-app> 
	[metadata-complete]: 为true时该Web应用不会加载Annotation配置的Web组件(如Servlet/Filter 等) 
	《context-param》: 配置键值对格式的参数，对整个Web应用有效，代码中可通过 getInitParameter()方法获得对应的值
	  contextConfigLocation：指定String配置文件，一般是 /WEB-INF/applicationContext.xml， 多个值(如 daoContext.xml)的话通过逗号分开
	《filter》+《filter-mapping》：设置过滤器，比如 xxx.StrutsPrepareAndExecuteFilter， xxx.SiteMeshFilter 等
	《jsp-config》+《jsp-property-group/》：配置JSP属性，主要有《el-ignored》是否允许使用表达式语言；《scripting-invalid》是否允许使用JSP脚本 等
	《listener》：配置监听器，如 xxx.ContextLoaderListener 指定Web应用启动时候加载Spring容器
	《session-config》：配置Session相关的参数，如设置 session-timeout 为很大的值(或??代表永不超时)，方便调试
	《servlet》：配置 servlet, 可以指定 servlet-name 对应的 jsp-file 
	《servlet-mapping》：将 servlet-name 对应的 servlet 映射到 url-pattern 指定的路径
	  
	  
	
	
 -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

    xmlns="http://java.sun.com/xml/ns/javaee" 
    xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    id="WebApp_ID" version="2.5"
     
        >
	<display-name>springtester</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>JSPStudy.jsp</welcome-file>
	</welcome-file-list>
	<!-- 
   <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>

    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>
     -->
     
    <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/ContextLoaderListener.xml</param-value>
      <!-- <param-value>classpath:applicationContext.xml</param-value> -->
    </context-param>
    <context-param>
	<param-name>db_driver</param-name>
	<param-value>org.sqlite.JDBC</param-value>
    </context-param>
	<context-param>
		<param-name>db_url</param-name>
		<param-value>jdbc:sqlite:./sqlitedemo.db</param-value>
	</context-param>
	<session-config>
		<session-timeout>99999</session-timeout>
	</session-config>
	
    <listener><listener-class>org.springframework.web.context.ContextLoaderListener</listener-class></listener>
    
    <!-- POST中文乱码过滤器 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <servlet>
        <servlet-name>SpringTester</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
       <!-- 查找 SpringTester-servlet.xml， 映射到 /, 表示作为默认的servlet并且处理所有的请求, 在 SpringTester-servlet.xml 中通过 mvc:resources 处理静态资源的请求  -->
        <servlet-name>SpringTester</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    
</web-app>