<!-- DispatcherServlet 将使用本文件创建应用上下文  -->
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
        ">

    <!-- 处理静态资源(图片、样式表、JS 等)的请求, 而不是由 DispatcherServlet 处理， 使用 Ant 风格的通配符, 
           所有满足 mapping 路径的请求都会由应用程序 location 指定的目录提供服务 -->
    <mvc:resources mapping="/resources/**"  location="/resources/*"/>
    
    <!-- 使用 Spring MVC 提供的注解驱动特性 -->
    <mvc:annotation-driven /> 
    
    <!-- HandlerMapping -->
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
    
    <!-- HandlerAdapter -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
    
    <!-- ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- 注册 Tiles 的 ViewResolver, 会查找逻辑视图名称并与Tiles定义名称相同的Tiles模版定义，并将其作为视图 -->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
    </bean>
    
    <!-- 加载一个或多个Tiles定义文件(views.xml)，并使得 TilesViewResolver 可通过它来解析视图 -->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/views/**/views.xml</value>
            </list>
        </property>
    </bean>
    
    <!-- 处理器 -->
    <bean name="/hello" class="com.fishjam.springtester.controller.HelloWorldController"/>
    
</beans>
